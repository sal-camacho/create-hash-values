Step 1: Generate hashes for files

# Use the ls command to list the contents of the directory
analyst@8586e9986305:~$ ls
file1.txt  file2.txt

# Use the cat command to display the contents of the file1.txt & file2.txt file
analyst@8586e9986305:~$ cat file1.txt
X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*
analyst@8586e9986305:~$ cat file2.txt
X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*

# Use the sha256sum command to generate the hash of the file1.txt & file2.txt file
analyst@8586e9986305:~$ sha256sum file1.txt 
131f95c51cc819465fa1797f6ccacf9d494aaaff46fa3eac73ae63ffbdfd8267  file1.txt
analyst@8586e9986305:~$ sha256sum file2.txt
2558ba9a4cad1e69804ce03aa2a029526179a91a5e38cb723320e83af9ca017b  file2.txt

Step 2: Compare hashes

# Use the sha256sum command to generate the hash of the file1.txt & file2.txt file and send the output to a new file called file1hash & file2hash
analyst@8586e9986305:~$ sha256sum file1.txt >> file1hash
analyst@8586e9986305:~$ sha256sum file2.txt >> file2hash

# Use the cat command to display the hash values in the file1hash and file2hash files.
analyst@8586e9986305:~$ cat file1hash
131f95c51cc819465fa1797f6ccacf9d494aaaff46fa3eac73ae63ffbdfd8267  file1.txt
131f95c51cc819465fa1797f6ccacf9d494aaaff46fa3eac73ae63ffbdfd8267  file1.txt
analyst@8586e9986305:~$ cat file2hash
2558ba9a4cad1e69804ce03aa2a029526179a91a5e38cb723320e83af9ca017b  file2.txt
2558ba9a4cad1e69804ce03aa2a029526179a91a5e38cb723320e83af9ca017b  file2.txt

# Use the cmp command to highlight the differences in the file1hash and file2hash files
analyst@8586e9986305:~$ cmp file1hash file2hash
file1hash file2hash differ: char 1, line 1
